# -*- coding: utf-8 -*-
"""cotton leaf.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IIbXlUYICNnNTBwO2EjCpD8EtY7reaI9
"""

import numpy as np

from tensorflow.compat.v1 import ConfigProto
from tensorflow.compat.v1 import Interactiv

config = ConfigProto()
config.gpu_options.per_process_gpu_memory_fraction = 0.5
config.gpu_options.allow_growth = True
session = InteractiveSession(config=config)

"""###import the libraries"""

import tensorflow as tf
from tensorflow.keras.layers import Input, Lambda, Dense, Flatten
from tensorflow.keras.models import Model
from tensorflow.keras.applications.resnet50 import ResNet50
from tensorflow.keras.applications import ResNet50V2
from tensorflow.keras.preprocessing import image
from tensorflow.keras.preprocessing.image import ImageDataGenerator, load_img
from tensorflow.keras.models import Sequential
import numpy as np
import pandas as pd
from glob import glob
import matplotlib.pyplot as plt
import seaborn as sns



from google.colab import drive
drive.mount('/content/drive')

#resize the image size to this
Image_size=[224,224]

#train_path='/content/drive/MyDrive/dataset/cotton leaf disease prediction/train-20210106T035731Z-001/train'
#val_path='/content/drive/MyDrive/dataset/cotton leaf disease prediction/val-20210106T035924Z-001/val'
#test_path='/content/drive/MyDrive/dataset/cotton leaf disease prediction/test-20210106T035653Z-001/test'
train_path='C:\Users\user\Downloads\cotton leaf disease prediction\train-20210106T035731Z-001'
test_path='C:\Users\user\Downloads\cotton leaf disease prediction\test-20210106T035653Z-001'
val_path='C:\Users\user\Downloads\cotton leaf disease prediction\val-20210106T035924Z-001'


resnet=ResNet50(input_shape=Image_size+[3],weights='imagenet',include_top=False)

#For not train the existing weights of Resnet
for layers in resnet.layers:
  layers.trainable=False

folders=glob('/content/drive/MyDrive/dataset/cotton leaf disease prediction/train-20210106T035731Z-001/train/*')

folders

# We can add our layers 
x=Flatten()(resnet.output)

pred=Dense(len(folders),activation='softmax')(x)

model=Model(inputs=resnet.input,outputs=pred)

model.summary()

model.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])

train_data=ImageDataGenerator(rescale=1./255,
                              shear_range=0.2,
                              horizontal_flip=True,
                              zoom_range=0.2)
test_data=ImageDataGenerator(rescale=1./255)
val_data=ImageDataGenerator(rescale=1./255)

train_set=train_data.flow_from_directory('/content/drive/MyDrive/dataset/cotton leaf disease prediction/train-20210106T035731Z-001/train',
                                         target_size=(224,224),
                                         batch_size=32,
                                         class_mode='categorical')

test_set=test_data.flow_from_directory('/content/drive/MyDrive/dataset/cotton leaf disease prediction/test-20210106T035653Z-001/test',
                                         target_size=(224,224),
                                         batch_size=32,
                                         class_mode='categorical')



val_set=val_data.flow_from_directory('/content/drive/MyDrive/dataset/cotton leaf disease prediction/val-20210106T035924Z-001/val',
                                         target_size=(224,224),
                                         batch_size=32,
                                         class_mode='categorical')

r=model.fit_generator(train_set,validation_data=test_set,epochs=1,validation_steps=len(test_set),steps_per_epoch=32)



plt.plot(r.history['loss'])
plt.plot(r.history['val_loss'])
plt.show()

plt.plot(r.history['accuracy'])
plt.plot(r.history['val_accuracy'])
plt.show()

plt.plot(r.history['accuracy'])
plt.plot(r.history['val_accuracy'])
plt.show()

model.save('cotton_resnet50.h5')

y_pred=model.predict(test_set)

y_pred

import numpy as np
y_pred=np.argmax(y_pred,axis=1)
y_pred

from tensorflow.keras.models import load_model
model=load_model('/content/cotton_resnet50.h5')

from tensorflow.keras.preprocessing.image import ImageDataGenerator, load_img
img=load_img('/content/drive/MyDrive/dataset/cotton leaf disease prediction/val-20210106T035924Z-001/val/diseased cotton leaf/dis_leaf (100)_iaip.jpg',
             target_size=(224,224))


